üéâ {{ .Chart.Name }} has been deployed successfully!

üìä Deployment Summary:
  - Release: {{ .Release.Name }}
  - Namespace: {{ .Release.Namespace }}
  - Chart Version: {{ .Chart.Version }}
  - App Version: {{ .Chart.AppVersion }}
  - Replicas: {{ .Values.replicaCount }}

üåê Access your application:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "k8s-prac.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "k8s-prac.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "k8s-prac.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "k8s-prac.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

üìã Useful Commands:
  # View pods
  kubectl get pods -l app.kubernetes.io/instance={{ .Release.Name }}

  # View logs
  kubectl logs -l app.kubernetes.io/instance={{ .Release.Name }} -f

  # View services
  kubectl get svc -l app.kubernetes.io/instance={{ .Release.Name }}

{{- if .Values.mongodb.enabled }}
  # Connect to MongoDB
  kubectl exec -it deployment/{{ include "k8s-prac.fullname" . }}-mongodb -- mongosh --username {{ .Values.mongodb.auth.rootUsername }}
{{- end }}

üîÑ Upgrade/Rollback:
  # Upgrade
  helm upgrade {{ .Release.Name }} {{ .Chart.Name }}

  # Rollback
  helm rollback {{ .Release.Name }}

  # View history
  helm history {{ .Release.Name }}

üóëÔ∏è  Uninstall:
  helm uninstall {{ .Release.Name }}

{{- if .Values.autoscaling.enabled }}
üöÄ Auto-scaling is enabled:
  - Min replicas: {{ .Values.autoscaling.minReplicas }}
  - Max replicas: {{ .Values.autoscaling.maxReplicas }}
  - CPU target: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}%
{{- end }}

For more information about this chart, visit: https://github.com/your-org/k8s-prac
